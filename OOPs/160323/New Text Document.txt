// To overload + operator to perform, Union operation
// Author: Saransh Baniyal
// Date: 16-03-23

#include <iostream>
using namespace std;

class arrSet{
	int *arr;
	int size;

	public:
		arrSet(int *a, int s){
			arr = a;
			size = s;
		}
		arrSet(){
			cout<<"Input the size of array: "<<endl;
			cin<<n;
			cout<<"Input the elements of the array: "<<endl;
			arr = new int[n];
			for(int i=0; i<n; i++)
				cin<<arr[i];
		}
		void removeTrash(){
			for(int i=0; i<size; i++){
				if(arr[i]==-1){
					if(i==size-1){
						size=size-1;
					}
					else{
						for(int j=i+1; j<size; j++){
							arr[j-1]=arr[j];
						}
						size=size-1;
					}
				}
			}
		}
		void printData(){
			for(int i=0; i<size; i++)
				cout<<arr[i]<<" ";
			
			cout<<endl;
		}
		arrSet operator + (arrySet ob){
			int s = size + ob.size;
			int a[s];
			int j=0;
			for(int i=0; i<size; i++){
				a[j]=arr[i];
				j++;
			}
			for(int i=0; i<ob.size; i++){
				a[j]=ob.arr[i];
				j++;
			}
			
			for(int i=0; i<s; i++){
				for(j=i+1; j<s-1; j++){
					if(arr[i]==arr[j])
						arr[j]=-1;
					
				}
			}
		}
};

int main(){
	int a = {1,2,-1,3,-1,-1};
	arrSet ob(a,6);
	ob.printData();
	ob.removeTrash();
	ob.printData();
	return 0;
}